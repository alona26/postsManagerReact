{"ast":null,"code":"var _jsxFileName = \"C:\\\\NextProjects\\\\HelloWorld\\\\app-try\\\\src\\\\Components\\\\ListPost.js\",\n  _s = $RefreshSig$();\nimport Post from './Post';\nimport classes from './ListPost.module.css';\nimport Form from '../routes/Form';\nimport Modal from './Modal';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListPost(props) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  function addPostHandler(postData) {\n    setPosts(existingPost => [postData, ...existingPost]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.visible ? /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.onCloseVisible,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onCancel: props.onCloseVisible,\n        onAddPost: addPostHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : null, posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        author: post.author,\n        body: post.body\n      }, post.body, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ther are no posts yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start adding some!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ListPost, \"QFg9xhJ0x9yrnvUQrdhfY5IZlDs=\");\n_c = ListPost;\nexport default ListPost;\nvar _c;\n$RefreshReg$(_c, \"ListPost\");","map":{"version":3,"names":["Post","classes","Form","Modal","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ListPost","props","_s","posts","setPosts","addPostHandler","postData","existingPost","children","visible","onClose","onCloseVisible","onCancel","onAddPost","fileName","_jsxFileName","lineNumber","columnNumber","length","className","list","map","post","author","body","style","textAlign","color","_c","$RefreshReg$"],"sources":["C:/NextProjects/HelloWorld/app-try/src/Components/ListPost.js"],"sourcesContent":["import Post from './Post';\r\nimport classes from './ListPost.module.css'\r\nimport Form from '../routes/Form';\r\nimport Modal from './Modal';\r\nimport { useState } from 'react';\r\n\r\nfunction ListPost(props){\r\n    const [posts, setPosts] = useState([]);\r\n    function addPostHandler(postData){\r\n        setPosts((existingPost)=>[postData,...existingPost]);\r\n    }\r\n    return (\r\n        <>\r\n        \r\n        {props.visible ? (\r\n        <Modal onClose = {props.onCloseVisible}>\r\n        <Form \r\n         onCancel={props.onCloseVisible} onAddPost = {addPostHandler}\r\n         />\r\n        </Modal> \r\n        ): null}\r\n        {posts.length>0 ?\r\n        <ul className = {classes.list}>\r\n            {posts.map((post)=><Post key= {post.body} author = {post.author} body = {post.body}/>)}\r\n        </ul>\r\n        :\r\n        <div style={{textAlign:'center',color:'white'}}>\r\n        <h2>Ther are no posts yet</h2>\r\n        <p>Start adding some!</p>\r\n        </div>\r\n}\r\n        </>\r\n    )\r\n}\r\nexport default ListPost;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,QAAQA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,SAASU,cAAcA,CAACC,QAAQ,EAAC;IAC7BF,QAAQ,CAAEG,YAAY,IAAG,CAACD,QAAQ,EAAC,GAAGC,YAAY,CAAC,CAAC;EACxD;EACA,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,GAECP,KAAK,CAACQ,OAAO,gBACdZ,OAAA,CAACH,KAAK;MAACgB,OAAO,EAAIT,KAAK,CAACU,cAAe;MAAAH,QAAA,eACvCX,OAAA,CAACJ,IAAI;QACJmB,QAAQ,EAAEX,KAAK,CAACU,cAAe;QAACE,SAAS,EAAIR;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,GACL,IAAI,EACNd,KAAK,CAACe,MAAM,GAAC,CAAC,gBACfrB,OAAA;MAAIsB,SAAS,EAAI3B,OAAO,CAAC4B,IAAK;MAAAZ,QAAA,EACzBL,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBAAGzB,OAAA,CAACN,IAAI;QAAkBgC,MAAM,EAAID,IAAI,CAACC,MAAO;QAACC,IAAI,EAAIF,IAAI,CAACE;MAAK,GAApDF,IAAI,CAACE,IAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC,gBAELpB,OAAA;MAAK4B,KAAK,EAAE;QAACC,SAAS,EAAC,QAAQ;QAACC,KAAK,EAAC;MAAO,CAAE;MAAAnB,QAAA,gBAC/CX,OAAA;QAAAW,QAAA,EAAI;MAAqB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BpB,OAAA;QAAAW,QAAA,EAAG;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA,eAEJ,CAAC;AAEX;AAACf,EAAA,CA3BQF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA4BjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}