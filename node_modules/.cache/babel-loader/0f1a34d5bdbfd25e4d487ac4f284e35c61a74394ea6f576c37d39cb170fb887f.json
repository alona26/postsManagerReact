{"ast":null,"code":"var _jsxFileName = \"C:\\\\NextProjects\\\\HelloWorld\\\\app-try\\\\src\\\\routes\\\\NewPost.js\",\n  _s = $RefreshSig$();\nimport classes from '../Components/Form.module.css';\nimport Modal from '../Components/Modal';\nimport { useLoaderData, Link, Form, redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewPost() {\n  _s();\n  const postData = useLoaderData();\n  if (postData) {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        method: \"post\",\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"body\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"body\",\n            required: true,\n            rows: 3,\n            name: \"body\",\n            defaultValue: postData.post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            required: true,\n            name: \"author\",\n            defaultValue: postData.post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"..\",\n            className: classes.actions,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"post\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"body\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"body\",\n          required: true,\n          rows: 3,\n          name: \"body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          required: true,\n          name: \"author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"..\",\n          className: classes.actions,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(NewPost, \"nMNnQKuQhwZieZHmhg/mv1At1Bw=\", false, function () {\n  return [useLoaderData];\n});\n_c = NewPost;\nexport default NewPost;\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const postData = Object.fromEntries(formData);\n  await fetch('http://localhost:8080/posts', {\n    method: 'POST',\n    body: JSON.stringify(postData),\n    headers: {\n      'content-Type': 'application/json'\n    }\n  });\n  return redirect('/');\n}\nexport async function update({\n  params,\n  request\n}) {\n  const formData = await request.formData();\n  const postData = Object.fromEntries(formData);\n  await fetch('http://localhost:8080/posts/' + params.postId, {\n    method: 'POST',\n    body: JSON.stringify(postData),\n    headers: {\n      'content-Type': 'application/json'\n    }\n  });\n  return redirect('/');\n}\nexport async function loader({\n  params\n}) {\n  if (params.postId) {\n    const response = await fetch('http://localhost:8080/posts/' + params.postId);\n    const resData = await response.json();\n    return resData;\n  }\n  return;\n}\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["classes","Modal","useLoaderData","Link","Form","redirect","jsxDEV","_jsxDEV","NewPost","_s","postData","children","method","className","form","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","required","rows","name","defaultValue","post","body","type","author","actions","to","_c","action","request","formData","Object","fromEntries","fetch","JSON","stringify","headers","update","params","postId","loader","response","resData","json","$RefreshReg$"],"sources":["C:/NextProjects/HelloWorld/app-try/src/routes/NewPost.js"],"sourcesContent":["import classes from '../Components/Form.module.css';\r\nimport Modal from '../Components/Modal';\r\nimport { useLoaderData, Link, Form, redirect } from 'react-router-dom';\r\n\r\nfunction NewPost() {\r\n    const postData = useLoaderData();\r\n\r\n    if (postData) {\r\n        return (\r\n            <Modal>\r\n                <Form method='post' className={classes.form} >\r\n                    <p >\r\n                        <label htmlFor=\"body\">Text</label>\r\n                        <textarea id=\"body\" required rows={3} name=\"body\" defaultValue={postData.post.body} ></textarea>\r\n                    </p>\r\n                    <p >\r\n                        <label htmlFor=\"name\" >Your name</label>\r\n                        <input type=\"text\" id=\"name\" required name=\"author\" defaultValue={postData.post.author} />\r\n                    </p>\r\n                    <p className={classes.actions}>\r\n                        <Link to=\"..\" className={classes.actions} >Cancel</Link>\r\n                        <button >Submit</button>\r\n                    </p>\r\n\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n    return (\r\n        <Modal>\r\n            <Form method='post' className={classes.form} >\r\n                <p >\r\n                    <label htmlFor=\"body\">Text</label>\r\n                    <textarea id=\"body\" required rows={3} name=\"body\" ></textarea>\r\n                </p>\r\n                <p >\r\n                    <label htmlFor=\"name\" >Your name</label>\r\n                    <input type=\"text\" id=\"name\" required name=\"author\"/>\r\n                </p>\r\n                <p className={classes.actions}>\r\n                    <Link to=\"..\" className={classes.actions} >Cancel</Link>\r\n                    <button >Submit</button>\r\n                </p>\r\n\r\n            </Form>\r\n        </Modal>\r\n\r\n    );\r\n}\r\nexport default NewPost;\r\n\r\nexport async function action({ request }) {\r\n    const formData = await request.formData();\r\n    const postData = Object.fromEntries(formData);\r\n    await fetch('http://localhost:8080/posts', {\r\n        method: 'POST',\r\n        body: JSON.stringify(postData),\r\n        headers: {\r\n            'content-Type': 'application/json'\r\n        },\r\n    });\r\n\r\n    return redirect('/');\r\n}\r\n\r\nexport async function update({ params, request }) {\r\n    const formData = await request.formData();\r\n    const postData = Object.fromEntries(formData);\r\n    await fetch('http://localhost:8080/posts/' + params.postId, {\r\n        method: 'POST',\r\n        body: JSON.stringify(postData),\r\n        headers: {\r\n            'content-Type': 'application/json'\r\n        },\r\n    });\r\n\r\n    return redirect('/');\r\n}\r\nexport async function loader({ params }) {\r\n    if (params.postId) {\r\n        const response = await fetch('http://localhost:8080/posts/' + params.postId)\r\n\r\n        const resData = await response.json();\r\n        return resData;\r\n    }\r\n    return;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}