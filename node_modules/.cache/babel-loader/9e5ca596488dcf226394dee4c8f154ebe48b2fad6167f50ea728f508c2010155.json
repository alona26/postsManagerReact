{"ast":null,"code":"var _jsxFileName = \"C:\\\\NextProjects\\\\HelloWorld\\\\app-try\\\\src\\\\Components\\\\ListPost.js\",\n  _s = $RefreshSig$();\nimport Post from './Post';\nimport classes from './ListPost.module.css';\nimport { useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListPost() {\n  _s();\n  const posts = useLoaderData();\n  // function addPostHandler(postData){\n  //     fetch('http://localhost:8080/posts',{\n  //         method:'POST',\n  //         body:JSON.stringify(postData),\n  //         headers:{\n  //             'content-Type':'application/json'\n  //         }\n  // });\n  //     setPosts((existingPost)=>[postData,...existingPost]);\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [posts.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        author: post.author,\n        body: post.body\n      }, post.body, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), posts.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ther are no posts yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start adding some!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n}\n_s(ListPost, \"rS0svS2rd/CL+3YJKDM/pDuPDGo=\", false, function () {\n  return [useLoaderData];\n});\n_c = ListPost;\nexport default ListPost;\nvar _c;\n$RefreshReg$(_c, \"ListPost\");","map":{"version":3,"names":["Post","classes","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","ListPost","_s","posts","children","length","className","list","map","post","author","body","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","color","_c","$RefreshReg$"],"sources":["C:/NextProjects/HelloWorld/app-try/src/Components/ListPost.js"],"sourcesContent":["import Post from './Post';\r\nimport classes from './ListPost.module.css'\r\nimport { useLoaderData } from 'react-router-dom';\r\n\r\nfunction ListPost(){\r\n    const posts = useLoaderData();\r\n    // function addPostHandler(postData){\r\n    //     fetch('http://localhost:8080/posts',{\r\n    //         method:'POST',\r\n    //         body:JSON.stringify(postData),\r\n    //         headers:{\r\n    //             'content-Type':'application/json'\r\n    //         }\r\n    // });\r\n    //     setPosts((existingPost)=>[postData,...existingPost]);\r\n    // }\r\n    return (\r\n        <>\r\n        {posts.length>0&&(\r\n        <ul className = {classes.list}>\r\n            {posts.map((post)=><Post key= {post.body} author = {post.author} body = {post.body}/>)}\r\n        </ul>\r\n)}\r\n{posts.length === 0     && ( <div style={{textAlign:'center',color:'white'}}>\r\n        <h2>Ther are no posts yet</h2>\r\n        <p>Start adding some!</p>\r\n        </div>\r\n)}\r\n        </>\r\n    );\r\n}\r\nexport default ListPost;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAMC,KAAK,GAAGP,aAAa,CAAC,CAAC;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACIE,OAAA,CAAAE,SAAA;IAAAI,QAAA,GACCD,KAAK,CAACE,MAAM,GAAC,CAAC,iBACfP,OAAA;MAAIQ,SAAS,EAAIX,OAAO,CAACY,IAAK;MAAAH,QAAA,EACzBD,KAAK,CAACK,GAAG,CAAEC,IAAI,iBAAGX,OAAA,CAACJ,IAAI;QAAkBgB,MAAM,EAAID,IAAI,CAACC,MAAO;QAACC,IAAI,EAAIF,IAAI,CAACE;MAAK,GAApDF,IAAI,CAACE,IAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CACX,EACAZ,KAAK,CAACE,MAAM,KAAK,CAAC,iBAAUP,OAAA;MAAKkB,KAAK,EAAE;QAACC,SAAS,EAAC,QAAQ;QAACC,KAAK,EAAC;MAAO,CAAE;MAAAd,QAAA,gBACpEN,OAAA;QAAAM,QAAA,EAAI;MAAqB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BjB,OAAA;QAAAM,QAAA,EAAG;MAAkB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACZ;EAAA,eACS,CAAC;AAEX;AAACb,EAAA,CA1BQD,QAAQ;EAAA,QACCL,aAAa;AAAA;AAAAuB,EAAA,GADtBlB,QAAQ;AA2BjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}