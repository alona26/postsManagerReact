{"ast":null,"code":"var _jsxFileName = \"C:\\\\NextProjects\\\\HelloWorld\\\\app-try\\\\src\\\\routes\\\\NewPost.js\",\n  _s = $RefreshSig$();\nimport classes from '../Components/Form.module.css';\nimport Modal from '../Components/Modal';\nimport { useLoaderData, Link, Form, redirect } from 'react-router-dom';\n// import { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewPost() {\n  _s();\n  const postData = useLoaderData();\n  console.log(postData);\n  // defaultValue={dataToSet[0]}\n  // defaultValue={dataToSet[1]}\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"post\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"body\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"body\",\n          required: true,\n          rows: 3,\n          name: \"body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          required: true,\n          name: \"author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"..\",\n          className: classes.actions,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(NewPost, \"nMNnQKuQhwZieZHmhg/mv1At1Bw=\", false, function () {\n  return [useLoaderData];\n});\n_c = NewPost;\nexport default NewPost;\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const postData = Object.fromEntries(formData);\n  await fetch('http://localhost:8080/posts', {\n    method: 'POST',\n    body: JSON.stringify(postData),\n    headers: {\n      'content-Type': 'application/json'\n    }\n  });\n  return redirect('/');\n}\nexport async function update({\n  params,\n  request\n}) {\n  // const {id}= useParams();\n  const formData = await request.formData();\n  const postData = Object.fromEntries(formData);\n  await fetch('http://localhost:8080/posts/' + params.postId, {\n    method: 'POST',\n    body: JSON.stringify(postData),\n    headers: {\n      'content-Type': 'application/json'\n    }\n  });\n  return redirect('/');\n}\nexport async function loader({\n  params\n}) {\n  // const params = useParams();\n\n  // const[dataToSet,setData] = useState([null,null]);\n  // useEffect(() => {\n  // async function fetchDataForEditin () {\n  if (params.postId) {\n    const response = await fetch('http://localhost:8080/posts/' + params.postId);\n    const resData = await response.json();\n    // setData( [resData.post.body,resData.post.author]);\n  }\n  return resData;\n  //     };\n  //     fetchDataForEditin();\n  // },[params.postId]);\n}\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["classes","Modal","useLoaderData","Link","Form","redirect","jsxDEV","_jsxDEV","NewPost","_s","postData","console","log","children","method","className","form","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","required","rows","name","type","actions","to","_c","action","request","formData","Object","fromEntries","fetch","body","JSON","stringify","headers","update","params","postId","loader","response","resData","json","$RefreshReg$"],"sources":["C:/NextProjects/HelloWorld/app-try/src/routes/NewPost.js"],"sourcesContent":["import classes from '../Components/Form.module.css';\r\nimport Modal from '../Components/Modal';\r\nimport {useLoaderData, Link, Form, redirect} from 'react-router-dom';\r\n// import { useEffect, useState } from 'react';\r\n\r\nfunction NewPost(){\r\n    const postData = useLoaderData();\r\n    \r\n    \r\n    console.log(postData); \r\n    // defaultValue={dataToSet[0]}\r\n    // defaultValue={dataToSet[1]}\r\n    return (\r\n        <Modal>\r\n        <Form method='post' className={classes.form} >\r\n            <p >\r\n                <label htmlFor=\"body\">Text</label>\r\n                <textarea id=\"body\"  required rows={3} name = \"body\"  ></textarea>\r\n            </p>\r\n            <p >\r\n                <label htmlFor=\"name\" >Your name</label>\r\n                <input type=\"text\" id=\"name\" required name=\"author\" />\r\n            </p>\r\n            <p className={classes.actions}>\r\n            <Link to=\"..\" className={classes.actions} >Cancel</Link>\r\n            <button >Submit</button>\r\n            </p>\r\n     \r\n        </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default NewPost;\r\n\r\nexport async function action({request}){\r\n    const formData = await request.formData();\r\n    const postData = Object.fromEntries(formData);\r\n    await fetch('http://localhost:8080/posts',{\r\n        method:'POST',\r\n        body:JSON.stringify(postData),\r\n        headers:{\r\n            'content-Type':'application/json'\r\n        },\r\n    });\r\n\r\n    return redirect('/');\r\n}\r\n\r\nexport async function update({params,request}){\r\n    // const {id}= useParams();\r\n    const formData = await request.formData();\r\n    const postData = Object.fromEntries(formData);\r\n    await fetch('http://localhost:8080/posts/'+params.postId,{\r\n        method:'POST',\r\n        body:JSON.stringify(postData),\r\n        headers:{\r\n            'content-Type':'application/json'\r\n        },\r\n    });\r\n\r\n    return redirect('/');\r\n}\r\nexport async function loader({params}){\r\n    // const params = useParams();\r\n    \r\n    // const[dataToSet,setData] = useState([null,null]);\r\n    // useEffect(() => {\r\n        // async function fetchDataForEditin () {\r\n    if(params.postId){\r\n        const response = await fetch('http://localhost:8080/posts/' + params.postId)\r\n        \r\n        const resData = await response.json();\r\n        // setData( [resData.post.body,resData.post.author]);\r\n    } \r\n    return resData;\r\n    //     };\r\n    //     fetchDataForEditin();\r\n    // },[params.postId]);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}