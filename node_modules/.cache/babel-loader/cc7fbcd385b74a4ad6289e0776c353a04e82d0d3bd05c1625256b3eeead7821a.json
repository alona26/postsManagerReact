{"ast":null,"code":"var _jsxFileName = \"C:\\\\NextProjects\\\\HelloWorld\\\\app-try\\\\src\\\\Components\\\\ListPost.js\",\n  _s = $RefreshSig$();\nimport Post from './Post';\nimport classes from './ListPost.module.css';\nimport Form from '../routes/Form';\nimport Modal from './Modal';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListPost(props) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [isFetching, setFetching] = useState(false);\n  useEffect(() => {\n    async function fetchPosts() {\n      const res = await fetch('http://lecalhost:8080/posts');\n      const resData = await res.json();\n      setPosts(resData.posts);\n      setFetching(false);\n    }\n    fetchPosts();\n  }, []);\n  function addPostHandler(postData) {\n    fetch('http://localhost:8080/posts', {\n      method: 'POST',\n      body: JSON.stringify(postData),\n      headers: {\n        'content-Type': 'application/json'\n      }\n    });\n    setPosts(existingPost => [postData, ...existingPost]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isFetching && posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        author: post.author,\n        body: post.body\n      }, post.body, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ther are no posts yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start adding some!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), isFetching && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading posts!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n_s(ListPost, \"aWIz4gyac05ZYOU8a4013lJ4u1E=\");\n_c = ListPost;\nexport default ListPost;\nvar _c;\n$RefreshReg$(_c, \"ListPost\");","map":{"version":3,"names":["Post","classes","Form","Modal","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ListPost","props","_s","posts","setPosts","isFetching","setFetching","fetchPosts","res","fetch","resData","json","addPostHandler","postData","method","body","JSON","stringify","headers","existingPost","children","length","className","list","map","post","author","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","color","_c","$RefreshReg$"],"sources":["C:/NextProjects/HelloWorld/app-try/src/Components/ListPost.js"],"sourcesContent":["import Post from './Post';\r\nimport classes from './ListPost.module.css'\r\nimport Form from '../routes/Form';\r\nimport Modal from './Modal';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction ListPost(props){\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [isFetching,setFetching] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        async function fetchPosts(){\r\n        const res = await fetch('http://lecalhost:8080/posts')\r\n        const resData = await res.json();\r\n        setPosts(resData.posts);\r\n        setFetching(false);\r\n        }\r\n    fetchPosts();\r\n    }, []);\r\n\r\n    function addPostHandler(postData){\r\n        fetch('http://localhost:8080/posts',{\r\n            method:'POST',\r\n            body:JSON.stringify(postData),\r\n            headers:{\r\n                'content-Type':'application/json'\r\n            }\r\n    });\r\n        setPosts((existingPost)=>[postData,...existingPost]);\r\n    }\r\n    return (\r\n        <>\r\n        {! isFetching && posts.length>0 ?\r\n        <ul className = {classes.list}>\r\n            {posts.map((post)=><Post key= {post.body} author = {post.author} body = {post.body}/>)}\r\n        </ul>\r\n        :\r\n        <div style={{textAlign:'center',color:'white'}}>\r\n        <h2>Ther are no posts yet</h2>\r\n        <p>Start adding some!</p>\r\n        </div>\r\n}\r\n{isFetching && <div style={{textAlign:'center',color:'white'}}>\r\n        <p>Loading posts!</p>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\nexport default ListPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}