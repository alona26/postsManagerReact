{"ast":null,"code":"var _jsxFileName = \"C:\\\\NextProjects\\\\HelloWorld\\\\app-try\\\\src\\\\routes\\\\NewPost.js\",\n  _s = $RefreshSig$();\nimport classes from '../Components/Form.module.css';\nimport Modal from '../Components/Modal';\nimport { Link, Form, redirect, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewPost() {\n  _s();\n  const params = useParams();\n  const [dataToSet, setData] = useState([null, null]);\n  useEffect(() => {\n    async function fetchDataForEditin() {\n      if (params.postId) {\n        const response = await fetch('http://localhost:8080/posts/' + params.postId);\n        const resData = await response.json();\n        setData([resData.post.body, resData.post.author]);\n      }\n    }\n    ;\n    fetchDataForEditin();\n  }, [params.postId]);\n\n  // console.log(dataToSet); \n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"post\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"body\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"body\",\n          required: true,\n          rows: 3,\n          name: \"body\",\n          defaultValue: dataToSet[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          required: true,\n          name: \"author\",\n          defaultValue: dataToSet[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"..\",\n          className: classes.actions,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(NewPost, \"CZEUls66H/KRoxcLM+unjcR6BUM=\", false, function () {\n  return [useParams];\n});\n_c = NewPost;\nexport default NewPost;\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const postData = Object.fromEntries(formData);\n  await fetch('http://localhost:8080/posts', {\n    method: 'POST',\n    body: JSON.stringify(postData),\n    headers: {\n      'content-Type': 'application/json'\n    }\n  });\n  return redirect('/');\n}\nexport async function update({\n  params,\n  request\n}) {\n  // const {id}= useParams();\n  const formData = await request.formData();\n  const postData = Object.fromEntries(formData);\n  console.log(postData);\n  await fetch('http://localhost:8080/posts/' + params.postId, {\n    method: 'POST',\n    body: JSON.stringify(postData),\n    headers: {\n      'content-Type': 'application/json'\n    }\n  });\n  return redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["classes","Modal","Link","Form","redirect","useParams","useEffect","useState","jsxDEV","_jsxDEV","NewPost","_s","params","dataToSet","setData","fetchDataForEditin","postId","response","fetch","resData","json","post","body","author","children","method","className","form","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","required","rows","name","defaultValue","type","actions","to","_c","action","request","formData","postData","Object","fromEntries","JSON","stringify","headers","update","console","log","$RefreshReg$"],"sources":["C:/NextProjects/HelloWorld/app-try/src/routes/NewPost.js"],"sourcesContent":["import classes from '../Components/Form.module.css';\r\nimport Modal from '../Components/Modal';\r\nimport {Link, Form, redirect, useParams} from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction NewPost(){\r\n\r\n    const params = useParams();\r\n    \r\n    const[dataToSet,setData] = useState([null,null]);\r\n    useEffect(() => {\r\n        async function fetchDataForEditin () {\r\n            if(params.postId){\r\n            const response = await fetch('http://localhost:8080/posts/' + params.postId)\r\n        \r\n            const resData = await response.json();\r\n            setData( [resData.post.body,resData.post.author]);\r\n            } \r\n        };\r\n        fetchDataForEditin();\r\n    },[params.postId]);\r\n    \r\n    // console.log(dataToSet); \r\n\r\n\r\n    return (\r\n        <Modal>\r\n        <Form method='post' className={classes.form} >\r\n            <p >\r\n                <label htmlFor=\"body\">Text</label>\r\n                <textarea id=\"body\"  required rows={3} name = \"body\" defaultValue={dataToSet[0]} ></textarea>\r\n            </p>\r\n            <p >\r\n                <label htmlFor=\"name\" >Your name</label>\r\n                <input type=\"text\" id=\"name\" required name=\"author\" defaultValue={dataToSet[1]}/>\r\n            </p>\r\n            <p className={classes.actions}>\r\n            <Link to=\"..\" className={classes.actions} >Cancel</Link>\r\n            <button >Submit</button>\r\n            </p>\r\n     \r\n        </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default NewPost;\r\n\r\nexport async function action({request}){\r\n    const formData = await request.formData();\r\n    const postData = Object.fromEntries(formData);\r\n    await fetch('http://localhost:8080/posts',{\r\n        method:'POST',\r\n        body:JSON.stringify(postData),\r\n        headers:{\r\n            'content-Type':'application/json'\r\n        },\r\n    });\r\n\r\n    return redirect('/');\r\n}\r\n\r\nexport async function update({params,request}){\r\n    // const {id}= useParams();\r\n    const formData = await request.formData();\r\n    const postData = Object.fromEntries(formData);\r\n    console.log(postData)\r\n    await fetch('http://localhost:8080/posts/'+params.postId,{\r\n        method:'POST',\r\n        body:JSON.stringify(postData),\r\n        headers:{\r\n            'content-Type':'application/json'\r\n        },\r\n    });\r\n\r\n    return redirect('/');\r\n}"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,+BAA+B;AACnD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAAQC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,QAAO,kBAAkB;AAChE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,OAAOA,CAAA,EAAE;EAAAC,EAAA;EAEd,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAE1B,MAAK,CAACQ,SAAS,EAACC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;EAChDD,SAAS,CAAC,MAAM;IACZ,eAAeS,kBAAkBA,CAAA,EAAI;MACjC,IAAGH,MAAM,CAACI,MAAM,EAAC;QACjB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGN,MAAM,CAACI,MAAM,CAAC;QAE5E,MAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACrCN,OAAO,CAAE,CAACK,OAAO,CAACE,IAAI,CAACC,IAAI,EAACH,OAAO,CAACE,IAAI,CAACE,MAAM,CAAC,CAAC;MACjD;IACJ;IAAC;IACDR,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAC,CAACH,MAAM,CAACI,MAAM,CAAC,CAAC;;EAElB;;EAGA,oBACIP,OAAA,CAACR,KAAK;IAAAuB,QAAA,eACNf,OAAA,CAACN,IAAI;MAACsB,MAAM,EAAC,MAAM;MAACC,SAAS,EAAE1B,OAAO,CAAC2B,IAAK;MAAAH,QAAA,gBACxCf,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAOmB,OAAO,EAAC,MAAM;UAAAJ,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClCvB,OAAA;UAAUwB,EAAE,EAAC,MAAM;UAAEC,QAAQ;UAACC,IAAI,EAAE,CAAE;UAACC,IAAI,EAAG,MAAM;UAACC,YAAY,EAAExB,SAAS,CAAC,CAAC;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC,eACJvB,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAOmB,OAAO,EAAC,MAAM;UAAAJ,QAAA,EAAE;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxCvB,OAAA;UAAO6B,IAAI,EAAC,MAAM;UAACL,EAAE,EAAC,MAAM;UAACC,QAAQ;UAACE,IAAI,EAAC,QAAQ;UAACC,YAAY,EAAExB,SAAS,CAAC,CAAC;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClF,CAAC,eACJvB,OAAA;QAAGiB,SAAS,EAAE1B,OAAO,CAACuC,OAAQ;QAAAf,QAAA,gBAC9Bf,OAAA,CAACP,IAAI;UAACsC,EAAE,EAAC,IAAI;UAACd,SAAS,EAAE1B,OAAO,CAACuC,OAAQ;UAAAf,QAAA,EAAE;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxDvB,OAAA;UAAAe,QAAA,EAAS;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB;AAACrB,EAAA,CAvCQD,OAAO;EAAA,QAEGL,SAAS;AAAA;AAAAoC,EAAA,GAFnB/B,OAAO;AAwChB,eAAeA,OAAO;AAEtB,OAAO,eAAegC,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EACnC,MAAMC,QAAQ,GAAG,MAAMD,OAAO,CAACC,QAAQ,CAAC,CAAC;EACzC,MAAMC,QAAQ,GAAGC,MAAM,CAACC,WAAW,CAACH,QAAQ,CAAC;EAC7C,MAAM1B,KAAK,CAAC,6BAA6B,EAAC;IACtCO,MAAM,EAAC,MAAM;IACbH,IAAI,EAAC0B,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IAC7BK,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC;EAEF,OAAO9C,QAAQ,CAAC,GAAG,CAAC;AACxB;AAEA,OAAO,eAAe+C,MAAMA,CAAC;EAACvC,MAAM;EAAC+B;AAAO,CAAC,EAAC;EAC1C;EACA,MAAMC,QAAQ,GAAG,MAAMD,OAAO,CAACC,QAAQ,CAAC,CAAC;EACzC,MAAMC,QAAQ,GAAGC,MAAM,CAACC,WAAW,CAACH,QAAQ,CAAC;EAC7CQ,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;EACrB,MAAM3B,KAAK,CAAC,8BAA8B,GAACN,MAAM,CAACI,MAAM,EAAC;IACrDS,MAAM,EAAC,MAAM;IACbH,IAAI,EAAC0B,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IAC7BK,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC;EAEF,OAAO9C,QAAQ,CAAC,GAAG,CAAC;AACxB;AAAC,IAAAqC,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}